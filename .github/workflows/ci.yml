name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm install
        working-directory: ./backend

      - run: npm run test:unit
        working-directory: ./backend

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm install
        working-directory: ./backend

      - run: npm run test:integration
        working-directory: ./backend

  e2e:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm install
        working-directory: ./backend

      - run: npm run test:e2e
        working-directory: ./backend

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install
        working-directory: ./backend

      - name: Lint code (SAST)
        run: npx eslint . || true
        working-directory: ./backend

      - name: Run dependency check (SCA)
        run: npm audit --audit-level=moderate || true
        working-directory: ./backend

  cache-and-artifacts:
  runs-on: ubuntu-latest
  steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Cache npm
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      run: npm install
      working-directory: ./backend

    - name: List all coverage reports (debugging)
      run: ls -R ./backend/reports || echo "No coverage reports found"
      working-directory: ./backend

    - name: Upload test coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: test-coverage
        path: |
          ./backend/reports/unit
          ./backend/reports/integration
          ./backend/reports/e2e
        if-no-files-found: warn
        compression-level: 6



  observability:
    runs-on: ubuntu-latest
    steps:
      - name: Log tracing placeholder
        run: echo "Send custom metrics to OpenTelemetry / DataDog / Prometheus here"

  deploy:
    name: Deploy to Fly.io
    needs: [unit, integration, e2e, security, cache-and-artifacts]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        working-directory: ./backend

      - name: Deploy to Fly.io
        uses: superfly/flyctl-actions@1.3
        with:
          args: deploy --remote-only ./backend
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
