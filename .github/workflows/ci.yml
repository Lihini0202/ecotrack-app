name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install
        working-directory: ./backend

      - name: Run unit tests
        run: npm run test:unit
        working-directory: ./backend

      - name: Run integration tests
        run: npm run test:integration
        working-directory: ./backend

      - name: Run end-to-end tests
        run: npm run test:e2e
        working-directory: ./backend

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install
        working-directory: ./backend

      - name: Lint code (SAST)
        run: npx eslint . || true
        working-directory: ./backend

      - name: Run dependency check (SCA)
        run: npm audit --audit-level=moderate || true
        working-directory: ./backend

  cache-and-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - run: npm install
        working-directory: ./backend

      - name: Build backend (placeholder)
        run: echo "No build step defined yet"

      - name: Upload test coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage
          path: reports/

  synthetic-monitoring:
    runs-on: ubuntu-latest
    steps:
      - name: Health check
        run: curl -f https://ecotrackapp.fly.dev/api/health || exit 1

  observability:
    runs-on: ubuntu-latest
    steps:
      - name: Log tracing placeholder
        run: echo "Send custom metrics to OpenTelemetry / DataDog / Prometheus here"

  deploy:
    name: Deploy to Fly.io
    needs: [test, security, cache-and-artifacts]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        working-directory: ./backend

      - name: Deploy to Fly.io
        uses: superfly/flyctl-actions@1.3
        with:
          args: deploy --remote-only --config ./backend/fly.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
